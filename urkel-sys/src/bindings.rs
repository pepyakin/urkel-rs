/* automatically generated by rust-bindgen 0.55.1 */

pub const URKEL_EHASHMISMATCH: u32 = 1;
pub const URKEL_ESAMEKEY: u32 = 2;
pub const URKEL_ESAMEPATH: u32 = 3;
pub const URKEL_ENEGDEPTH: u32 = 4;
pub const URKEL_EPATHMISMATCH: u32 = 5;
pub const URKEL_ETOODEEP: u32 = 6;
pub const URKEL_EINVAL: u32 = 7;
pub const URKEL_ENOTFOUND: u32 = 8;
pub const URKEL_ECORRUPTION: u32 = 9;
pub const URKEL_ENOUPDATE: u32 = 10;
pub const URKEL_EBADWRITE: u32 = 11;
pub const URKEL_EBADOPEN: u32 = 12;
pub const URKEL_EITEREND: u32 = 13;
pub type size_t = usize;
pub type wchar_t = ::std::os::raw::c_int;
pub type max_align_t = u128;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct urkel_s {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct urkel_tx_s {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct urkel_iter_s {
    _unused: [u8; 0],
}
pub type urkel_t = urkel_s;
pub type urkel_tx_t = urkel_tx_s;
pub type urkel_iter_t = urkel_iter_s;
extern "C" {
    pub fn __urkel_get_errno() -> *mut ::std::os::raw::c_int;
}
extern "C" {
    pub fn urkel_open(prefix: *const ::std::os::raw::c_char) -> *mut urkel_t;
}
extern "C" {
    pub fn urkel_close(tree: *mut urkel_t);
}
extern "C" {
    pub fn urkel_destroy(prefix: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn urkel__corrupt(prefix: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn urkel_hash(
        hash: *mut ::std::os::raw::c_uchar,
        data: *const ::std::os::raw::c_void,
        size: size_t,
    );
}
extern "C" {
    pub fn urkel_root(tree: *mut urkel_t, hash: *mut ::std::os::raw::c_uchar);
}
extern "C" {
    pub fn urkel_inject(
        tree: *mut urkel_t,
        hash: *const ::std::os::raw::c_uchar,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn urkel_get(
        tree: *mut urkel_t,
        value: *mut ::std::os::raw::c_uchar,
        size: *mut size_t,
        key: *const ::std::os::raw::c_uchar,
        root: *const ::std::os::raw::c_uchar,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn urkel_has(
        tree: *mut urkel_t,
        key: *const ::std::os::raw::c_uchar,
        root: *const ::std::os::raw::c_uchar,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn urkel_insert(
        tree: *mut urkel_t,
        key: *const ::std::os::raw::c_uchar,
        value: *const ::std::os::raw::c_uchar,
        size: size_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn urkel_remove(
        tree: *mut urkel_t,
        key: *const ::std::os::raw::c_uchar,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn urkel_prove(
        tree: *mut urkel_t,
        proof_raw: *mut *mut ::std::os::raw::c_uchar,
        proof_len: *mut size_t,
        key: *const ::std::os::raw::c_uchar,
        root: *const ::std::os::raw::c_uchar,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn urkel_verify(
        exists: *mut ::std::os::raw::c_int,
        value: *mut ::std::os::raw::c_uchar,
        value_len: *mut size_t,
        proof_raw: *const ::std::os::raw::c_uchar,
        proof_len: size_t,
        key: *const ::std::os::raw::c_uchar,
        root: *const ::std::os::raw::c_uchar,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn urkel_iterate(
        tree: *mut urkel_t,
        root: *const ::std::os::raw::c_uchar,
    ) -> *mut urkel_iter_t;
}
extern "C" {
    pub fn urkel_tx_create(
        tree: *mut urkel_t,
        hash: *const ::std::os::raw::c_uchar,
    ) -> *mut urkel_tx_t;
}
extern "C" {
    pub fn urkel_tx_destroy(tx: *mut urkel_tx_t);
}
extern "C" {
    pub fn urkel_tx_clear(tx: *mut urkel_tx_t);
}
extern "C" {
    pub fn urkel_tx_root(tx: *mut urkel_tx_t, hash: *mut ::std::os::raw::c_uchar);
}
extern "C" {
    pub fn urkel_tx_inject(
        tx: *mut urkel_tx_t,
        hash: *const ::std::os::raw::c_uchar,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn urkel_tx_get(
        tx: *mut urkel_tx_t,
        value: *mut ::std::os::raw::c_uchar,
        size: *mut size_t,
        key: *const ::std::os::raw::c_uchar,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn urkel_tx_has(
        tx: *mut urkel_tx_t,
        key: *const ::std::os::raw::c_uchar,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn urkel_tx_insert(
        tx: *mut urkel_tx_t,
        key: *const ::std::os::raw::c_uchar,
        value: *const ::std::os::raw::c_uchar,
        size: size_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn urkel_tx_remove(
        tx: *mut urkel_tx_t,
        key: *const ::std::os::raw::c_uchar,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn urkel_tx_prove(
        tx: *mut urkel_tx_t,
        proof_raw: *mut *mut ::std::os::raw::c_uchar,
        proof_len: *mut size_t,
        key: *const ::std::os::raw::c_uchar,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn urkel_tx_commit(tx: *mut urkel_tx_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn urkel_iter_create(tx: *mut urkel_tx_t) -> *mut urkel_iter_t;
}
extern "C" {
    pub fn urkel_iter_destroy(iter: *mut urkel_iter_t);
}
extern "C" {
    pub fn urkel_iter_next(
        iter: *mut urkel_iter_t,
        key: *mut ::std::os::raw::c_uchar,
        value: *mut ::std::os::raw::c_uchar,
        size: *mut size_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn urkel_free(ptr: *mut ::std::os::raw::c_void);
}
